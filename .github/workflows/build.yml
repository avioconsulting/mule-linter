name: Build and Publish

on:
  push:
    branches:
      - 'master'
      - 'feature/**'
      - 'chore/**'
      - 'feat/**'
  pull_request:
    branches:
      - 'master'

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'gradle'

      - name: Set Version
        id: set-version
        run: echo "version=$(./gradlew mule-linter-core:properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Print Version
        run: echo "Version ${{ steps.set-version.outputs.version }}"

      - name: Compile
        run: ./gradlew assemble

      - name: Verify
        run: ./gradlew check

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml

      - name: Stage Deployment
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: ./gradlew publish

      - name: JReleaser full-Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && github.ref == 'refs/heads/master'}}
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{steps.set-version.outputs.version}}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.MAVEN_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          JRELEASER_VERSION: 1.4.0
        with:
          version: ${{ env.JRELEASER_VERSION }}
          arguments: full-release

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Increment Version
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && github.ref == 'refs/heads/master'}}
        run: ./gradlew incrementPatch -Dversion.prerelease=SNAPSHOT

      - name: Set New Version Variable
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && github.ref == 'refs/heads/master'}}
        id: set-new-version
        run: echo "version=$(./gradlew mule-linter-core:properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && github.ref == 'refs/heads/master'}}
        uses: peter-evans/create-pull-request@v4
        with:
          branch: "feature/v${{ steps.set-new-version.outputs.version }}"
          commit-message: "[create-pull-request] Auto increment to v${{ steps.set-new-version.outputs.version }}"
          title: "Auto increment to v${{ steps.set-new-version.outputs.version }}"
          delete-branch: true
          assignees: ${{ github.actor }}
